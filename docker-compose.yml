version: "3"

services:
  namenode:
    image: apache/hadoop:3.3.5
    container_name: namenode
    hostname: namenode
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hadoop_namenode:/opt/hadoop/data/nameNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./start-hdfs.sh:/start-hdfs.sh
      - ./app:/app
    ports:
      - "9870:9870"
    command: ["/bin/bash", "/start-hdfs.sh"]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.2

  datanode1:
    image: apache/hadoop:3.3.5
    container_name: datanode1
    hostname: datanode1
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hadoop_datanode1:/opt/hadoop/data/dataNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: ["/bin/bash", "/init-datanode.sh"]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.3

  datanode2:
    image: apache/hadoop:3.3.5
    container_name: datanode2
    hostname: datanode2
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hadoop_datanode2:/opt/hadoop/data/dataNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: ["/bin/bash", "/init-datanode.sh"]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.4

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_HEAP_OPTS: "-Xmx512M -Xms512M" # Memory limits
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.5

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
      - namenode
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
    ports:
      - "9092:9092"
    volumes:
      - ./kafka_data:/var/lib/kafka/data # Persistent storage
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.6

  spark:
    image: bitnami/spark:3.4.1
    container_name: spark
    hostname: spark
    user: root
    environment:
      - SPARK_MODE=master
      - SPARK_LOCAL_DIRS=/tmp
    volumes:
      - ./app:/app  # Mount your Scala app
    depends_on:
      - kafka
      - namenode
    ports:
      - "4040:4040"  
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.7

networks:
  hdfs_network:
    name: hdfs_network
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
